---
import ImageComp from "../components/ImageComp.astro";
import DiscoveryFlightLayout from "../layouts/DiscoveryFlightLayout.astro";
const DISCOVERY_FORM_WEBHOOK_URL = import.meta.env.DISCOVERY_FORM_WEBHOOK_URL;
const PORTAL_API_KEY = import.meta.env.PORTAL_API_KEY;
---

<DiscoveryFlightLayout
  siteTitle="Discovery Flight Form | Ideal Aviation"
  siteDescription="Schedule a discovery flight at Ideal Aviation. Take control of an aircraft and enjoy the joy of flight. See the St. Louis Gateway Arch from thousands of feet in the air. See if becoming a pilot is right for you"
>
  <section class="flex">
    <div
      class="flex flex-col gap-3 max-w-screen-sm px-5 py-10 lg:py-28 lg:px-28 lg:min-w-[640px] mx-auto lg:mx-0"
    >
      <a href="/">
        <ImageComp
          imageAlt="Ideal Logo"
          imagePath="/src/assets/images/ideal_logo_600.webp"
          styles="w-28 mb-5"
        />
      </a>
      <h1
        class="text-sm/5 font-semibold text-gray-500 uppercase tracking-widest"
      >
        Request a Discovery Flight
      </h1>
      <h2
        class="max-w-lg text-pretty text-2xl font-semibold tracking-tight text-main-black sm:text-3xl"
      >
        Depart from St. Louis Downtown Airport with Ideal Aviation
      </h2>
      <p class="italic text-sm text-gray-700">
        IMPORTANT: Please ensure that you have talked with an Ideal Aviation
        team member to confirm your flight. This page is just to REQUEST a
        discovery flight. You will not be in the flight schedule until you speak
        with an Ideal Aviation team member.
      </p>
      <form
        id="form"
        class="flex flex-col max-w-4xl mx-auto lg:my-0 bg-white shadow-sm"
      >
        <div class="flex flex-col gap-2">
          <label for="first-name" class="text-sm font-medium mt-2 text-gray-500"
            >First Name</label
          >
          <input
            type="text"
            name="first-name"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded"
            required
          />
          <label for="last-name" class="text-sm font-medium mt-2 text-gray-500"
            >Last Name</label
          >
          <input
            type="text"
            name="last-name"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded"
            required
          />
          <label for="email" class="text-sm font-medium mt-2 text-gray-500"
            >Email</label
          >
          <input
            id="email"
            type="email"
            name="email"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded"
            required
          />
          <input
            type="email"
            name="confirm-email"
            placeholder="Confirm email"
            class="hidden"
          />
          <label for="phone" class="text-sm font-medium mt-2 text-gray-500"
            >Phone</label
          >
          <input
            type="tel"
            name="phone"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded"
            required
          />
          <label for="aircraft" class="text-sm font-medium mt-2 text-gray-500"
            >Aircraft</label
          >
          <select
            id="aircraft"
            name="aircraft"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded bg-white"
            required
          >
            <option value="Airplanes">Airplanes</option>
            <option value="Helicopters">Helicopters</option>
            <option value="Both">Both</option>
          </select>
          <label
            for="preferred-date"
            class="text-sm font-medium mt-2 text-gray-500"
            >Preferred Discovery Flight Date</label
          >
          <input
            id="date"
            type="date"
            name="preferred-date"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded"
            required
          />
          <label
            for="preferred-time"
            class="text-sm font-medium mt-2 text-gray-500"
            >Preferred Discovery Flight Time</label
          >
          <select
            name="preferred-time"
            class="px-2 py-2 outline-1 w-full border-gray-400 border outline-gray-500 rounded bg-white"
            required
          >
            <option value="7AM - 10AM">7AM - 10AM</option>
            <option value="10AM - 1PM">10AM - 1PM</option>
            <option value="1PM - 4PM">1PM - 4PM</option>
            <option value="4PM - 7PM">4PM - 7PM</option>
          </select>
          <label
            for="additional-info"
            class="text-sm font-medium mt-2 text-gray-500"
          >
            Any additional information
          </label>
          <textarea
            id="additional-info"
            name="additional-info"
            class="px-2 py-2 outline-1 border-gray-400 border outline-gray-500 min-h-32 rounded"
          ></textarea>
        </div>

        <div class="flex gap-3">
          <input
            type="checkbox"
            name="agree-data-collection"
            id="agree-data-collection"
          />

          <label
            for="agree-data-collection"
            class="text-gray-500 text-sm lg:text-base my-5"
          >
            I agree to the terms & conditions provided by the company. By
            providing my phone number, I agree to receive text messages from
            Ideal Aviation.
          </label>
        </div>
        <button
          id="submit-button"
          disabled
          type="submit"
          class="btn-primary cursor-not-allowed bg-gray-400 hover:bg-gray-400"
          >Request</button
        >
      </form>
    </div>
    <div
      class="w-full hidden lg:block fixed right-0 bottom-0 top-0 left-[640px]"
    >
      <ImageComp
        imageAlt="Commercial Pilot Point of View"
        imagePath="/src/assets/images/commercial-pov-sky.webp"
        styles="w-full h-full object-cover"
        quality={100}
      />
    </div>
  </section>

  <script define:vars={{ DISCOVERY_FORM_WEBHOOK_URL, PORTAL_API_KEY }}>
    const dateInput = document.getElementById("date");

    const today = new Date();
    today.setHours(0, 0, 0, 0);

    const minDate = new Date(today);
    minDate.setDate(today.getDate() + 5);

    const formatDate = (date) => {
      const year = date.getFullYear();
      const month = String(date.getMonth() + 1).padStart(2, "0");
      const day = String(date.getDate()).padStart(2, "0");
      return `${year}-${month}-${day}`;
    };

    dateInput.min = formatDate(minDate);

    const checkbox = document.getElementById("agree-data-collection");
    const submitButton = document.getElementById("submit-button");

    checkbox.addEventListener("change", function () {
      if (checkbox.checked) {
        submitButton.disabled = false;
        submitButton.classList.remove(
          "cursor-not-allowed",
          "bg-gray-400",
          "hover:bg-gray-400",
        );
      } else {
        submitButton.disabled = true;
        submitButton.classList.add(
          "cursor-not-allowed",
          "bg-gray-400",
          "hover:bg-gray-400",
        );
      }
    });

    document.addEventListener("DOMContentLoaded", () => {
      const form = document.getElementById("form");
      if (!form) {
        console.error("Form element not found.");
        return;
      }

      form.addEventListener("submit", async (event) => {
        event.preventDefault();

        const formData = new FormData(form);
        const confirmEmail = formData.get("confirm-email")?.trim();

        if (confirmEmail) return;

        const webhookURL = DISCOVERY_FORM_WEBHOOK_URL;
        const apiKey = PORTAL_API_KEY;

        const urlEncodedBody = new URLSearchParams(formData).toString();

        const jsonBody = {
          first_name: formData.get("first-name")?.trim() || "",
          last_name: formData.get("last-name")?.trim() || "",
          email: formData.get("email")?.trim() || "",
          phone: formData.get("phone")?.trim() || "",
          campaign: "discovery_flight",
          account_random_id: "ac_kikjlgpq",
          metadata: {
            message: formData.get("additional-info")?.trim() || "",
            aircraft: formData.get("aircraft")?.trim() || "",
            preferred_date: formData.get("preferred-date")?.trim() || "",
            preferred_time: formData.get("preferred-time")?.trim() || "",
          },
        };

        try {
          const [ghlRes, portalRes] = await Promise.all([
            fetch(webhookURL, {
              method: "POST",
              headers: {
                "Content-Type": "application/x-www-form-urlencoded",
              },
              body: urlEncodedBody,
            }),
            fetch("https://portal.rightruddermarketing.com/api/leads", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
                "x-api-key": apiKey,
              },
              body: JSON.stringify(jsonBody),
            }),
          ]);

          if (ghlRes.ok && portalRes.ok) {
            window.location.href = "/contact-confirmation";
          } else {
            console.error("Submission failed", {
              ghlStatus: ghlRes.status,
              portalStatus: portalRes.status,
            });
          }
        } catch (err) {
          console.error("Submission error:", err);
        }
      });
    });
  </script>
</DiscoveryFlightLayout>
