---
interface BreadcrumbItem {
  name: string;
  href?: string;
}

interface Props {
  items: BreadcrumbItem[];
  className?: string;
}

const { items, className = "" } = Astro.props;

// Breadcrumb schema generation removed. Ensure schema is injected externally.
---

<!-- Breadcrumb Schema injection removed. Ensure schema is injected externally. -->

<!-- Breadcrumb Navigation -->
<nav aria-label="Breadcrumb" class={`flex mb-6 ${className}`}>
  <ol class="flex items-center space-x-2 text-sm text-gray-600">
    {
      items.map((item, index) => (
        <li class="flex items-center">
          {index > 0 && (
            <svg
              class="w-4 h-4 mx-2 text-gray-400"
              fill="currentColor"
              viewBox="0 0 20 20"
              aria-hidden="true"
            >
              <path
                fill-rule="evenodd"
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                clip-rule="evenodd"
              />
            </svg>
          )}
          {item.href ? (
            <a
              href={item.href}
              class="hover:text-main-blue transition-colors duration-200"
              {...(index === items.length - 1
                ? { "aria-current": "page" }
                : {})}
            >
              {item.name}
            </a>
          ) : (
            <span class="font-medium text-gray-900" aria-current="page">
              {item.name}
            </span>
          )}
        </li>
      ))
    }
  </ol>
</nav>
